#!/bin/bash

# Dump and compress MySQL databases to a remote SSH server
# Author: Seff P.
# Version: 20200804

# Remote SSH details 
USERNAME=""
BACKUP_SERVER=""
SSH_PORT="22"
DIR="/backup/$HOSTNAME/$(date +%e|tr -d " ")"
SSH_EXTRA_OPT="-o GSSAPIAuthentication=no -o ControlMaster=auto -o ControlPath="~/.ssh/%r@%h-%p" -o ControlPersist=10"

# Dump options
DUMP_ERROR="/tmp/mysql-backup.err"
DUMP_OPT="--opt --single-transaction --quick"
DB_EXCLUDE_LIST="Database|test|information_schema|performance_schema|eximstats|sys"

if [[ -z $USERNAME || -z $BACKUP_SERVER ]]
        then
        echo "ERROR: MySQL backup not configured" >&2
        exit 1
else
	echo "INFO: Initiating database dump to $DIR"
	ssh ${SSH_EXTRA_OPT} ${USERNAME}@${BACKUP_SERVER} -p ${SSH_PORT} mkdir -p ${DIR}

        if [[ -z "$1" ]]
                then DB_LIST=$(echo 'show databases;' | mysql | grep -wvE "${DB_EXCLUDE_LIST}")
        else
                DB_LIST="$*"
        fi
        for DB in ${DB_LIST}
                do echo -n "INFO: Dumping database $DB "
                mysqldump ${DUMP_OPT} $DB 2> $DUMP_ERROR | gzip -9 | ssh ${SSH_EXTRA_OPT} ${USERNAME}@${BACKUP_SERVER} -p ${SSH_PORT} "cat > ${DIR}/$DB.sql.gz"
                if [[ $PIPESTATUS == 0 ]]
                        then
                        DB_DONE+=(${DB})
                        echo "[DONE]"
                else
                        ERR_MSG=$(cat $DUMP_ERROR)
                        DB_FAIL+=("${DB}: ${ERR_MSG}")
                        :> $DUMP_ERROR
                        echo "[FAIL]"
			echo "WARNING: ${DB}: ${ERR_MSG}"
                fi
        done
        DB_DONE_COUNT=${#DB_DONE[*]}
        DB_FAIL_COUNT=${#DB_FAIL[*]}
        if [[ ${DB_FAIL_COUNT} == 0 ]]
                then echo "INFO: Total $DB_DONE_COUNT databases backed up"
        else
                echo "WARNING: Total $DB_DONE_COUNT databases backed up. $DB_FAIL_COUNT failed."
                echo "Following ${DB_FAIL_COUNT} database(s) failed to dump:" >&2
                IFS=$'\n'
                echo "${DB_FAIL[*]}" >&2
                exit 1
        fi
fi
